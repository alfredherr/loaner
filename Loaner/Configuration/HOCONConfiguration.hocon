akka 
 {
    actor 
    {
     serializers 
        {
          hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion" 
        }
        serialization-bindings 
        {
            "System.Object" = hyperion
        }
    }
}            
 
akka.actor.debug.lifecycle = off
akka.actor.debug.unhandled = off


akka.loglevel = INFO

akka.loggers=["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
     
### PostgreSQL Journal ###
#akka.persistence.journal.plugin = "akka.persistence.journal.postgresql"
#akka.persistence.journal.postgresql.class = "Akka.Persistence.PostgreSql.Journal.PostgreSqlJournal, Akka.Persistence.PostgreSql"
#akka.persistence.journal.postgresql.plugin-dispatcher = "akka.actor.default-dispatcher"
#akka.persistence.journal.postgresql.connection-string = "Server=127.0.0.1;Port=5432;Database=akka;User Id=akka;Password=Testing123;"
#akka.persistence.journal.postgresql.connection-timeout = 30s
#akka.persistence.journal.postgresql.schema-name = public
#akka.persistence.journal.postgresql.table-name = event_journal  
#akka.persistence.journal.postgresql.auto-initialize = on
#akka.persistence.journal.postgresql.timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
#akka.persistence.journal.postgresql.metadata-table-name = metadata
## defines column db type used to store payload. Available option: BYTEA (default), JSON, JSONB
#akka.persistence.journal.postgresql.stored-as = BYTEA

### SqLite Journal ###
#akka.persistence.journal.plugin = "akka.persistence.journal.sqlite"
#akka.persistence.journal.sqlite.class = "Akka.Persistence.Sqlite.Journal.SqliteJournal, Akka.Persistence.Sqlite"
#akka.persistence.journal.sqlite.plugin-dispatcher = "akka.actor.default-dispatcher"
#akka.persistence.journal.sqlite.connection-timeout = 30s
#akka.persistence.journal.sqlite.table-name = event_journal
#akka.persistence.journal.sqlite.metadata-table-name = journal_metadata
#akka.persistence.journal.sqlite.auto-initialize = on
#akka.persistence.journal.sqlite.timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
#akka.persistence.journal.sqlite.connection-string = "Data Source=../../../akka_demo.db"

### SqLite Snapshot ###
#akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.sqlite"
#akka.persistence.snapshot-store.sqlite.class = "Akka.Persistence.Sqlite.Snapshot.SqliteSnapshotStore, Akka.Persistence.Sqlite"
#akka.persistence.snapshot-store.sqlite.plugin-dispatcher = "akka.actor.default-dispatcher"
#akka.persistence.snapshot-store.sqlite.connection-timeout = 2000s
#akka.persistence.snapshot-store.sqlite.table-name = snapshot_store
#akka.persistence.snapshot-store.sqlite.auto-initialize = on
#akka.persistence.snapshot-store.sqlite.connection-string = "Data Source=/demo/akka_demo.db.sqlite"

### Jonfile Snapshot ###
akka.persistence.snapshot-store.jonfile.class = "Loaner.SnapShotStore3.FileSnapshotStore3, Loaner"
akka.persistence.snapshot-store.jonfile.max-load-attempts=19
akka.persistence.snapshot-store.jonfile.dir = "/demo/db"
#akka.persistence.snapshot-store.jonfile.dir = "C:\\Temp"
akka.persistence.snapshot-store.jonfile.plugin-dispatcher = "akka.actor.default-dispatcher"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.jonfile"
akka.persistence.max-concurrent-recoveries = 50
max-snapshot-size=400000

## Akka Persistence Journal Defaults
akka.persistence.journal-plugin.recovery-event-timeout = 1201s
akka.persistence.journal-plugin-fallback.recovery-event-timeout = 1200s

### Kafka Config ####
Akka.NumAccountPublisherActor = 10 
Akka.NumPortfolioPublisherActor = 10 
Akka.AccountStateTopicName = "AccountState" 
Akka.PortfolioStateTopicName = "PortfolioState" 
Kafka.BrokerList = "docker07.concordservicing.com:29092,docker08.concordservicing.com:29092,docker09.concordservicing.com:29092"

### StatsD Config ##
Akka.StatsDServer = "docker08.concordservicing.com"
Akka.StatsDPort   = 8125  
Akka.StatsDPrefix = "akka-demo" 

### Business Rules Config ###
Akka.BusinessRulesFilename = "/demo/BusinessRulesMap.txt"
Akka.CommandsToRulesFilename = "/demo/CommandToBusinessRuleMap.txt"
#Akka.BusinessRulesFilename = "c:\\Temp\\business_rules_map.rules"
#Akka.CommandsToRulesFilename = "c:\\Temp\\commands_to_rules.rules"


### Akka Clustering Config ###
#akka.actor.provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
#akka.remote.log-remote-lifecycle-events = INFO
#akka.remote.dot-netty.tcp.hostname = "loaner"
#akka.remote.dot-netty.tcp.port = 7777
#akka.cluster.seed-nodes = ["akka.tcp://demoSystem@lighthouse:4053"] 
#akka.cluster.roles = [concord]


